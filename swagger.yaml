openapi: "3.0.3"
info:
  title: "Hokepon API"
  description: |-
    HokeponのREST APIの共通仕様です。
  version: "0.0.1"
  # termsOfService: http://swagger.io/terms/
  # contact:
  #   email: hogehoge@mail.com
servers:
  - url: https://internal.hokepon.com/api
tags:
  - name: shops
    description: 店舗
    # externalDocs:
    #   description: Find out more
    #   url: http://swagger.io
  - name: reservations
    description: 予約
  - name: cas
    description: CA
  - name: caAssigns
    description: CAアサイン情報
paths:
  /shops:
    get:
      tags:
        - shops
      summary: 店舗一覧を取得する
      description: 店舗一覧を取得する
      # operationId: hoge
      parameters:
        - name: prefecture
          in: query
          description: 都道府県
          required: false
          schema:
            type: string
        - name: city
          in: query
          description: 市区町村
          required: false
          schema:
            type: string
        - name: keyword
          in: query
          description: キーワード
          required: false
          schema:
            type: string
        - name: tags
          in: query
          description: タグ
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
  /shops/{shopId}:
    get:
      tags:
        - shops
      summary: １件の店舗取得する
      description: 店舗IDを指定して、店舗取得する
      parameters:
        - name: shopId
          in: path
          description: 店舗ID
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid shopId
  /cas:
    get:
      tags:
        - cas
      summary: エリアのCAの一覧を取得する
      description: エリアIDを指定してCAの一覧を取得する
      parameters:
        - name: areaId
          in: query
          description: エリアID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ca' 
        '400':
          description: Invalid parameters areaId
        '404':
          description: Not found
  /cas/{caId}:
    get:
      tags:
        - cas
      summary: 1件のCAを取得する
      description: CAの社員番号を指定してい1件のCAを取得する
      parameters:
        - name: caId
          in: path
          description: CAの社員番号
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ca'
        '400':
          description: Invalid parameters caId
        '404':
          description: Not found
  /caAssigns:
    post:
      tags:
        - caAssigns
      summary: CA自動アサイン
      description: 相談予約にCAをアサインする
      #operationId:
      requestBody:
        description: 予約情報一部
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssignReservationInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/AssignReservationInfo'
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                example: 27
        '400':
          description: Invalid parameters supplied
        '422':
          description: Failed to assign CA
    get:
      tags:
        - caAssigns
      summary: CAアサイン情報を取得
      description: CAアサイン情報を取得する
      #operationId:
      parameters:
        - name: reservationId
          in: query
          description: 予約ID
          required: false
          schema:
              type: integer
              format: int64
        - name: shopId
          in: query
          description: 店舗ID
          required: false
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caAssign'
        '400':
          description: Invalid parameters
        '404':
          description: Not found
  /caAssigns/{caAssignId}:
    get:
      tags:
        - caAssigns
      summary: CAアサイン情報取得
      description: CAアサイン情報を取得する
      #operationId:
      parameters:
        - name: caAssignId
          in: path
          description: CAアサイン情報ID
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caAssign'
        '400':
          description: Invalid parameters
        '404':
          description: Not found
    put:
      tags:
        - caAssigns
      summary: CAアサイン情報更新
      description: CAアサイン情報を更新
      #operationId:
      parameters:
        - name: caAssignId
          in: path
          description: CAアサイン情報ID
          required: true
          schema:
              type: integer
              format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caAssign'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - caAssigns
      summary: CAアサイン情報削除
      description: CAアサイン情報を削除
      #operationId:
      parameters:
        - name: caAssignId
          in: path
          description: CAアサイン情報ID
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '400':
          description: Invalid caAssignId supplied
        '404':
          description: caAssign not found
  /reservations/{reservationId}:
    get:
      tags:
        - reservations
      summary: 予約情報を取得する
      description: 予約IDを指定して、予約情報取得する
      parameters:
        - name: reservationId
          in: path
          description: 予約ID
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: successful operation
          # content:
          #   application/json:
          #     $ref: '#/components/schemas/Hoge'
        '400':
          description: Invalid parameters supplied
        '404':
          description: Not found
    put:
      tags:
        - reservations
      summary: 予約情報更新
      description: 予約IDを指定して、予約情報を更新する
      parameters:
        - name: reservationId
          in: path
          description: 予約ID
          required: true
          schema:
              type: integer
              format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        default:
          description: successful operation
  /reservations/{shopId}/availabilities:
    get:
      tags:
        - reservations
      summary: 予約可能情報
      description: |
        店舗IDを指定して、予約可能情報を取得する<br>
        ・取得できる範囲は、当日から二週間分<br>
        ・fromの指定がない場合、当日をfromとする
      parameters:
        - name: shopId
          in: path
          description: 店舗ID
          required: true
          schema:
              type: integer
              format: int64
        - name: from
          in: query
          description: 取得範囲の開始日付
          required: false
          schema:
              type: string
              format: date
        - name: to
          in: query
          description: 取得範囲の終了日付
          required: false
          schema:
              type: string
              format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationSlot'
        '400':
          description: Invalid parameter supplied
        '404':
          description: Not found
      # security:
      #   - api_key: []
  /reservations:
    get:
      tags:
        - reservations
      summary: 予約一覧
      description: 店舗の予約一覧
      #operationId:
      parameters:
        - name: areaId
          in: query
          description: エリアID
          required: true
          schema:
              type: integer
              format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ca' 
        '400':
          description: Invalid parameters areaId
        '404':
          description: Not found
    post:
      tags:
        - reservations
      summary: 予約登録
      description: 予約登録
      #operationId:
      requestBody:
        description: 予約情報
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
              required:
                - name
                - email
                - shopId
                - reservationTime
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid input
        '404':
          description: Validation exception
## 
components:
  schemas:
    ca:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 111111
        name:
          type: integer
          example: 太郎 シーエー
    caAssign:
      type: object
      description: CAアサイン情報
      properties:
        id:
          type: integer
          format: int64
          # example
        shopId:
          type: integer
          format: int64
          example: 26016
        caId:
          type: integer
          format: int64
          example: 26016
        time:
          type: string
          format: date-time
    shop:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 26016
          shopName:
            type: string
            example: グランツリー武蔵小杉店
          prefecture:
            type: string
            example: kanagawa
          city:
            type: string
            example: kawasaki-shi-nakahara-ku
          # more information here
          # ...
          tags:
            type: array
            items:
            $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Reservation:
          type: object
          properties:
            name:
              type: string
              example: 保険　太郎
            email:
              type: string
              format: email
              example: taro@email.com
            shopId:
              type: integer
              format: int64
              example: 26016
            desired_date:
              type: string
              format: date
            desired_time:
              type: string
              format: date-time
    ReservationSlot:
      type: object
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        note:
          type: string
        status:
          type: string
          enum: [AVAILABLE, LIMITED, UNAVAILABLEPENDING, CONTACT_REQUIRED, BLOCKED]
    AssignReservationInfo:
      type: object
      properties:
        customerName:
          type: string
          example: 保険　太郎
        shopId:
          type: integer
          format: int64
          example: 26016
        reservationTime:
          type: string
          format: date-time
          example: 2024-12-01T09:00:00Z
        promotionID:
          type: string
          example: ss002 
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
